{% extends 'base.html.twig' %}

{% block title %}Mes infos{% endblock %}

{% block body %}

<input type="hidden" value="{{ user }}" id="userId">
<div id='calendar' class="mt-5 mb-5"></div>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Ajout d'un RDV</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">

        <div class="form-group">
          <label for="firstname">Prénom</label>
          <input type="text" value="" id="firstname" name="firstname" class="form-control">
        </div>   
        
        <div class="form-group">
          <label for="lastname">Nom</label>
          <input type="text" value="" id="lastname" name="lastname" class="form-control">
        </div>   

        <div class="form-group">
          <label for="email">E-mail</label>
          <input type="email" value="" id="email" name="email" class="form-control">
        </div>    

        <div class="form-group">
          <label for="tel">Tél</label>
          <input type="tel" value="" id="tel" name="tel" class="form-control">
        </div>  

        <div class="form-group">
          <label for="selectPresta">Prestation</label>
          <select value="" id="selectPresta" class="form-control">
          </select>
        </div>   

        <div class="form-group">
          <label for="start">Début</label>
          <input type="datetime-local" value="" id="start" name="start" class="form-control">
        </div>  

        <div class="form-group">
          <label for="end">Fin</label>
          <input type="datetime-local" value="" id="end" name="end" class="form-control">
        </div>    

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="saveRdv">Ajouter le RDV</button>
      </div>
    </div>
  </div>
</div>
      
{% endblock %}
{% block javascripts %}

    <script>

      var userId = document.getElementById('userId').value;

      var agendaEvents = [];
      var prestations = [];

      var cal = null;

      var calendarOptions = {
        initialView: 'timeGridWeek',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,listMonth',
        },
        buttonText: {
          today: "Aujourd'hui",
          day: "Jour",
          month: "Mois",
          week: "Semaine",
          list: "Liste"
        },
        views: {
          listMonth: {
            noEventsText: "Aucun rendez-vous à afficher.",        
          }
        },
        locale: 'fr',
        timeZone: 'Europe/Paris',
        nowIndicator: true,
        selectable: true,
        editable: true,
        events: agendaEvents,
        select: (arg) => {
    
          document.getElementById('start').value = formatDate(arg.start);
          document.getElementById('end').value = formatDate(arg.end);  

          let myModal = new bootstrap.Modal(document.getElementById('exampleModal'), {});
          myModal.show();

          for(var i = 0; i < prestations.length; i++){
            if(prestations[i].id === parseInt(document.getElementById('selectPresta').value)){
              var date = new Date(arg.start);
              date.setMinutes(date.getMinutes() + prestations[i].prestaTime)
              document.getElementById('end').value = formatDate(date); 
            }
          }      

          document.getElementById('selectPresta').onchange = (event) => {
            for(var i = 0; i < prestations.length; i++){
              if(prestations[i].id === parseInt(event.target.value)){
                var date = new Date(arg.start);
                date.setMinutes(date.getMinutes() + prestations[i].prestaTime)
                document.getElementById('end').value = formatDate(date); 
              }
            }      
          }

          document.getElementById('saveRdv').addEventListener('click', function(){

            var formulaire = {
              firstname: document.getElementById('firstname').value,
              lastname: document.getElementById('lastname').value,
              email: document.getElementById('email').value,
              tel: document.getElementById('tel').value,
              start: document.getElementById('start').value,
              end: document.getElementById('end').value,
              prestation: "/api/prestations/"+document.getElementById('selectPresta').value,
              users: "/api/users/"+userId
            }
            console.log(formulaire)

            agendaEvents.push({
              id: -1,
              title: formulaire.firstname+' '+formulaire.lastname,
              start: formulaire.start,
              end: formulaire.end,
              description: document.getElementById('selectPresta').value
            })
            myModal.hide();
            
            setTimeout(() => {
              
              calendarOptions = {...calendarOptions, events: agendaEvents};
              console.log(calendarOptions)
              document.querySelector('#calendar').innerHTML = "";
              showCalendar();
              
            }, 100)

            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/api/appointments');
            xhr.onload = () => {
                const res = JSON.parse(xhr.response);     
                for(var i = 0; i < agendaEvents.length; i++){
                  if(agendaEvents[i].id === -1){
                    agendaEvents[i].id = res.id
                  }
                }   
                console.log(agendaEvents); 
            }
            xhr.setRequestHeader("Content-Type", "application/json");    
            xhr.send(JSON.stringify(formulaire));

          })      
        }
      }; 

      setTimeout(showCalendar, 500);
      callAppointments();
      callPrestations();

      function showCalendar(){
            var calendarEl = document.querySelector('#calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, calendarOptions);
            calendar.on('eventChange', (e) => {
              console.log(e)
              calendar.render();
            })   
            console.log(calendar)  
            cal = calendar;     
            calendar.render();
      }

      function formatDate(arg){

        var date = new Date(arg);
        return date.toISOString().substring(0, 16);

      }

      function callAppointments(){
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/api/appointments/get/'+userId);
        xhr.onload = () => {
            const res = JSON.parse(xhr.response);
            console.log(res);
            for(var i = 0; i < res['hydra:member'][0].length; i++){
                var rdv = res['hydra:member'][0][i];
                agendaEvents.push({
                    title: rdv.firstname+' '+rdv.lastname,
                    start: new Date(rdv.start).toISOString(),
                    end: new Date(rdv.end).toISOString(),
                    id: rdv.id
                })
            }
            console.log(agendaEvents)
        }
        xhr.setRequestHeader("Content-Type", "application/json");    
        xhr.send();
      }

      function callPrestations(){
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/api/prestations/get/'+userId);
        xhr.onload = () => {
            const res = JSON.parse(xhr.response);
            console.log(res);
            for(var i = 0; i < res['hydra:member'][0].length; i++){
                var presta = res['hydra:member'][0][i];
                prestations.push(presta)
            }
            console.log(prestations)

            var selectPresta = document.getElementById('selectPresta');
            for(var i = 0; i < prestations.length; i++){
              var options = document.createElement('option');
              options.value = prestations[i].id;
              selectPresta.appendChild(options);
              options.innerHTML = prestations[i].name;
            }
        }
        xhr.setRequestHeader("Content-Type", "application/json");    
        xhr.send();
      }  

    </script>

{% endblock %}