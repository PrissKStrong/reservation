{% extends 'base.html.twig' %}

{% block title %}Mes infos{% endblock %}

{% block body %}

<input type="hidden" value="{{ user }}" id="userId">
<div id='calendar' class="mt-5 mb-5"></div>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Ajout d'un RDV</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="saveRdv">Ajouter le RDV</button>
      </div>
    </div>
  </div>
</div>
      
{% endblock %}
{% block javascripts %}

    <script>

      var userId = document.getElementById('userId').value;

      var agendaEvents = [];

      var cal = null;

      var calendarOptions = {
        initialView: 'timeGridWeek',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,listMonth',
        },
        buttonText: {
          today: "Aujourd'hui",
          day: "Jour",
          month: "Mois",
          week: "Semaine",
          list: "Liste"
        },
        views: {
          listMonth: {
            noEventsText: "Aucun rendez-vous Ã  afficher.",        
          }
        },
        locale: 'fr',
        timeZone: 'Europe/Paris',
        nowIndicator: true,
        selectable: true,
        editable: true,
        events: agendaEvents,
        select: (arg) => {

          let myModal = new bootstrap.Modal(document.getElementById('exampleModal'), {});
          myModal.show();

          document.getElementById('saveRdv').addEventListener('click', function(){
            agendaEvents.push({
              id: null,
              title: 'test',
              start: arg.start.toISOString(),
              end: arg.end.toISOString(),
            })
            console.log(agendaEvents);
            console.log(cal.view.title)
            
            setTimeout(() => {
              
              calendarOptions = {...calendarOptions, events: agendaEvents};
              console.log(calendarOptions)
              document.querySelector('#calendar').innerHTML = "";
              showCalendar();
              
            }, 100)
          })      
        }
      }; 

      setTimeout(showCalendar, 500);

      function showCalendar(){
            var calendarEl = document.querySelector('#calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, calendarOptions);
            calendar.on('eventChange', (e) => {
              console.log(e)
              calendar.render();
            })   
            console.log(calendar)  
            cal = calendar;     
            calendar.render();
      }
      

      
      var xhr = new XMLHttpRequest();
      xhr.open('GET', '/api/appointments/get/'+userId);
      xhr.onload = () => {
          const res = JSON.parse(xhr.response);
          console.log(res);
          for(var i = 0; i < res['hydra:member'][0].length; i++){
              var rdv = res['hydra:member'][0][i];
              agendaEvents.push({
                  title: rdv.firstname+' '+rdv.lastname,
                  start: new Date(rdv.start).toISOString(),
                  end: new Date(rdv.end).toISOString(),
                  id: rdv.id
              })
          }
          console.log(agendaEvents)
      }
      xhr.setRequestHeader("Content-Type", "application/json");    
      xhr.send();

    </script>

{% endblock %}